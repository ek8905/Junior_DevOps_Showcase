pipeline {
    agent any

    tools {
        nodejs 'nodejs-24.1.0'
        jdk 'jdk-21'
    }
    environment {
    SONAR_SCANNER_HOME = tool 'sonarqube7.1';
    }

    stages {
        stage('Installing Dependencies') {
            steps {
                dir('jenkins/solar-system-demo') {
                    sh '''
                       npm install --no-audit
                       npm i --package-lock-only
                    '''
                }
            }
        }
        
        stage('dependency scanning') {
          parallel {
            stage ('npm dependency check') { 
              steps { 
                 dir('jenkins/solar-system-demo') {          
                    sh '''
                        npm audit --audit-level=critical
                        echo $?
                    '''
                 }
              }              
            }
            stage('OWASP Dependency Check') {
               steps {
                   dependencyCheck additionalArguments: '''
                       --scan ./jenkins/solar-system-demo
                       --out ./jenkins/solar-system-demo
                       --format ALL
                       --prettyPrint
                       --failOnCVSS 7.0
                   ''', odcInstallation: 'OWASP-DepCheck-12'
                   dependencyCheckPublisher failedTotalCritical: 3, failedTotalHigh: 4, failedTotalLow: 10, failedTotalMedium: 6, pattern: '**/dependency-check-report.xml', stopBuild: true

               }
            }
          } 
        }
        stage('unit testing') {
          steps {
             dir('jenkins/solar-system-demo') {
               sh 'npm test'
             }
          }
        }
        stage('SAST - SonarQube') {
           steps {
              timeout(time: 600, unit: 'SECONDS') {
                  withSonarQubeEnv('sonar-qube-server') {
                     sh '''
                        $SONAR_SCANNER_HOME/bin/sonar-scanner \
                          -Dsonar.projectKey=Junior_devops_showcase \
                          -Dsonar.sources=jenkins/solar-system-demo \
                          -Dsonar.javascript.lcov.reportPaths=jenkins/solar-system-demo/coverage/lcov.info
                     '''
                  }
                  waitForQualityGate abortPipeline: true
              }
           }
        }
        stage('Docker Build Image') {
           steps {
             dir('jenkins') {
                sh 'docker build -t eldi.kacori/solar-system:$GIT_COMMIT .'
             }
           }
        } 

    }
    post {
      always {
         junit allowEmptyResults: true, keepProperties: true, testResults: 'jenkins/solar-system-demo/dependency-check-report.xml'
         publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, icon: '', keepAll: false, reportDir: 'jenkins/solar-system-demo', reportFiles: 'dependency-check-report.html', reportName: 'Solar system dependecy check HTML Report', reportTitles: 'dependency-check-report.html', useWrapperFileDirectly: true])
         junit allowEmptyResults: true, stdioRetention: '', testResults: 'jenkins/solar-system-demo/test-result.xml'
      }
    }



}

